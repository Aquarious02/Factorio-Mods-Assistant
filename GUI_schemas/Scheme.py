# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(395, 783)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_search = QtWidgets.QHBoxLayout()
        self.horizontalLayout_search.setObjectName("horizontalLayout_search")
        self.lineEdit_search = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_search.sizePolicy().hasHeightForWidth())
        self.lineEdit_search.setSizePolicy(sizePolicy)
        self.lineEdit_search.setBaseSize(QtCore.QSize(130, 0))
        self.lineEdit_search.setText("")
        self.lineEdit_search.setObjectName("lineEdit_search")
        self.horizontalLayout_search.addWidget(self.lineEdit_search)
        self.label_search_counter = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_search_counter.sizePolicy().hasHeightForWidth())
        self.label_search_counter.setSizePolicy(sizePolicy)
        self.label_search_counter.setMinimumSize(QtCore.QSize(30, 0))
        self.label_search_counter.setText("")
        self.label_search_counter.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_search_counter.setObjectName("label_search_counter")
        self.horizontalLayout_search.addWidget(self.label_search_counter)
        self.pushButton_match_case = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_match_case.sizePolicy().hasHeightForWidth())
        self.pushButton_match_case.setSizePolicy(sizePolicy)
        self.pushButton_match_case.setMinimumSize(QtCore.QSize(25, 20))
        self.pushButton_match_case.setMaximumSize(QtCore.QSize(35, 30))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(10)
        self.pushButton_match_case.setFont(font)
        self.pushButton_match_case.setCheckable(True)
        self.pushButton_match_case.setChecked(False)
        self.pushButton_match_case.setDefault(True)
        self.pushButton_match_case.setFlat(True)
        self.pushButton_match_case.setObjectName("pushButton_match_case")
        self.horizontalLayout_search.addWidget(self.pushButton_match_case)
        self.verticalLayout.addLayout(self.horizontalLayout_search)
        self.horizontalLayout_actions = QtWidgets.QHBoxLayout()
        self.horizontalLayout_actions.setObjectName("horizontalLayout_actions")
        self.checkBox_choose_all = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_choose_all.setObjectName("checkBox_choose_all")
        self.horizontalLayout_actions.addWidget(self.checkBox_choose_all)
        self.checkBox_enable = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_enable.setObjectName("checkBox_enable")
        self.horizontalLayout_actions.addWidget(self.checkBox_enable)
        self.verticalLayout.addLayout(self.horizontalLayout_actions)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(1)
        self.tableWidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsEnabled)
        item.setCheckState(QtCore.Qt.Checked)
        self.tableWidget.setItem(0, 0, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(True)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(200)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget.verticalHeader().setStretchLastSection(False)
        self.verticalLayout.addWidget(self.tableWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 395, 21))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_open = QtWidgets.QAction(MainWindow)
        self.action_open.setObjectName("action_open")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.action_save = QtWidgets.QAction(MainWindow)
        self.action_save.setObjectName("action_save")
        self.action_save_as = QtWidgets.QAction(MainWindow)
        self.action_save_as.setObjectName("action_save_as")
        self.action_make_copy = QtWidgets.QAction(MainWindow)
        self.action_make_copy.setObjectName("action_make_copy")
        self.menu.addAction(self.action_open)
        self.menu.addSeparator()
        self.menu.addAction(self.action_save)
        self.menu.addAction(self.action_save_as)
        self.menu.addAction(self.action_make_copy)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.lineEdit_search.setPlaceholderText(_translate("MainWindow", "Поиск..."))
        self.pushButton_match_case.setStatusTip(_translate("MainWindow", "Учитывать регистр"))
        self.pushButton_match_case.setText(_translate("MainWindow", "Аа"))
        self.checkBox_choose_all.setText(_translate("MainWindow", "Выбрать все"))
        self.checkBox_enable.setText(_translate("MainWindow", "Вкл/выкл"))
        self.tableWidget.setSortingEnabled(True)
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Вкл/выкл | Название"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.item(0, 0)
        item.setText(_translate("MainWindow", "Base"))
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.menu.setTitle(_translate("MainWindow", "Файл"))
        self.action_open.setText(_translate("MainWindow", "Открыть"))
        self.action_3.setText(_translate("MainWindow", "Сохранить как"))
        self.action_save.setText(_translate("MainWindow", "Сохранить"))
        self.action_save_as.setText(_translate("MainWindow", "Сохранить как"))
        self.action_make_copy.setText(_translate("MainWindow", "Создать копию"))
